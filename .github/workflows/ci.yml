name: ci
run-name: Testing and integration
on: [push]
jobs:
  install-python-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install python dependencies
        run: pip install Flask pylint black pytest pytest-cov
      # - name: lint
      #   run: python -m black delete_apis/*.py read_apis/*.py write_apis/*.py
  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Lint backend with black & pylint
        run: |
          python -m pylint delete_apis/*.py read_apis/*.py write_apis/*.py
      - name: Test backend apis
        run: |
          python -m pytest delete_apis/*.py --cov --cov-report=html:coverage_delete
          python -m pytest read_apis/*.py --cov --cov-report=html:coverage_read
          python -m pytest write_apis/*.py --cov --cov-report=html:coverage_write
#         python -m black delete_apis/*.py read_apis/*.py write_apis/*.py

  lint-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint rater with Go fmt
        run: gofmt -w -s package_rater/*

  # lint-python:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Lint backend with pylint
  #       run: |
  #         python -m black delete_apis/*.py read_apis/*.py write_apis/*.py
  #         python -m pylint delete_apis/*.py read_apis/*.py write_apis/*.py

  test-rater:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run install
        run: ./package_rater/run install
      - name: Run build
        run: ./package_rater/run build
      - name: Run Test
        run: ./package_rater/run test
      - name: Set env
        run: |
          cd package_rater/
          echo "ABSFILEPATH=$(readlink -f package_rater/url.txt)" >> $GITHUB_ENV
      - name: Run URL_FILE
        run: ./package_rater/run "${ABSFILEPATH}"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # test-backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: test delete apis
  #       run: |
  #         python -m pytest delete_apis/*.py --cov --cov-report=html:coverage_delete
  #         python -m pytest read_apis/*.py --cov --cov-report=html:coverage_read
  #         python -m pytest write_apis/*.py --cov --cov-report=html:coverage_write

  # build-images:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Build 'delete' container
  #       run: |
  #       cd delete-apis/
  #       docker build . -t delete-container
  #       docker run -p 3000:8080 --name my-node-app-container my-node-app
  #     - name: Build 'read' container
  #       run: |
  #       cd read-apis/
  #       docker build . -t 

  #   build-running-containers:
